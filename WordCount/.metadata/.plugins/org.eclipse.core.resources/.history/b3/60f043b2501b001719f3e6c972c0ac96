package com.psl.WordCount;

import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class WordCount extends Mapper<Object, org.apache.hadoop.io.Text, org.apache.hadoop.io.Text, org.apache.hadoop.io.IntWritable> {

	
	private Text word = new Text();
	
	// One Two
	// Key 0, Value One Two
	@Override
	protected void map(Object key, Text value, Mapper<Object, Text, Text, IntWritable>.Context context)
		throws IOException, InterruptedException {
		
		StringTokenizer itr = new StringTokenizer(value.toString());
		while(itr.hasMoreTokens()){
			word.set(itr.nextToken());
			context.write(word, One);
		}	
		
		
		
	}
	
	
}


// Key, Value
//0, 3 machines ---- highly configured
// 101, 1. namenode --- metadata RAM


//String  Text
//Int		IntWritable
//Byte	ByteWritable
//long	LongWritable


